<?xml version="1.0" encoding="UTF-8"?>
<project name="FirstTeam" default="dist" basedir=".">

    <property name="build.version" value="1.0" />
    <property name="debug" value="on" />

    <!-- Existing source definitions -->
    <property name="src.gameserver" location="java/l2ft/gameserver" />
    <property name="src.authserver" location="java/l2ft/loginserver" />
    <property name="src.commons"    location="java/l2ft/commons" />
    <property name="src.scripts"    location="dist/gameserver/data"/>

    <!-- Existing dist, lib, build paths -->
    <property name="dist"  location="dist" />
    <property name="lib"   location="lib" />
    <property name="build" location="build" />
    <property name="build.classes" location="${build}/classes" />

    <!-- Existing final output folder for production -->
    <property name="build.dist"            location="${build}/dist" />
    <property name="build.dist.authserver" location="${build.dist}/loginserver" />
    <property name="build.dist.gameserver" location="${build.dist}/gameserver" />
    <property name="build.dist.tools"      location="${build.dist}/tools" />

    <!-- ================== NEW DEV FOLDER PROPERTIES ================== -->
    <property name="build.dist.dev"              location="${build}/dist-dev" />
    <property name="build.dist.dev.authserver"   location="${build.dist.dev}/loginserver" />
    <property name="build.dist.dev.gameserver"   location="${build.dist.dev}/gameserver" />
    <property name="build.dist.dev.tools"        location="${build.dist.dev}/tools" />
    <!-- =============================================================== -->

    <path id="classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <pathconvert property="jar.list" pathsep=" " refid="classpath">
        <mapper type="flatten" />
    </pathconvert>

    <property name="build.classpath" refid="classpath"/>

    <tstamp>
        <format property="build.tstamp" pattern="yyyy.MM.dd HH:mm" />
    </tstamp>

    <!-- ==================== CLEAN / INIT ==================== -->
    <target name="clean" description="Remove the output directories.">
        <delete dir="${build}" />
    </target>

    <target name="init" description="Create the output directories.">
        <mkdir dir="${build}" />
    </target>

    <!-- ==================== COMPILE COMMONS ==================== -->
    <target name="compile-commons" depends="init">
        <delete dir="${build.classes}" />
        <mkdir dir="${build.classes}" />

        <javac srcdir="${src.commons}" 
               destdir="${build.classes}"
               optimize="on"
               debug="${debug}"
               source="1.7"
               target="1.7"
               encoding="UTF-8"
               nowarn="on"
               classpath="${build.classpath}">
            <compilerarg value="-Xlint:all,-serial" />
        </javac>
    </target>

    <target name="commons-jar" depends="compile-commons">
        <exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
            <arg line="-n ${src.commons}" />
        </exec>

        <jar destfile="${build}/l2ft-commons.jar">
            <fileset dir="${build.classes}" />
            <manifest>
                <attribute name="Build-By" value="${user.name}" />
                <attribute name="Build-Date" value="${build.tstamp}" />
                <attribute name="Implementation-Build" value="${build.revision}" />
                <attribute name="Implementation-Version" value="${build.version}" />
            </manifest>
        </jar>
    </target>

    <!-- ==================== COMPILE GAMESERVER ==================== -->
    <target name="compile-gameserver" depends="commons-jar">
        <delete dir="${build.classes}" />
        <mkdir dir="${build.classes}" />

        <javac srcdir="${src.gameserver}"
               destdir="${build.classes}"
               optimize="on"
               debug="${debug}"
               source="1.7"
               target="1.7"
               encoding="UTF-8"
               nowarn="on"
               classpath="${build.classpath}:${build}/l2ft-commons.jar">
            <!--<compilerarg value="-Xlint:deprecation" />-->
            <compilerarg value="-Xlint:all,-serial" />
        </javac>
    </target>

    <target name="gameserver-jar" depends="compile-gameserver">
        <exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
            <arg line="-n ${src.gameserver}" />
        </exec>

        <concat destfile="${build}/dist/gameserver/config/l2ft-version.ini">
            version=${build.revision}
            builddate=${build.tstamp}
        </concat>

        <jar destfile="${build}/l2ft-gameserver.jar">
            <fileset dir="${build.classes}" />
            <manifest>
                <attribute name="Main-Class" value="l2ft.gameserver.GameServer" />
                <attribute name="Class-Path" value="${jar.list} l2ft-commons.jar" />
                <attribute name="Build-By" value="${user.name}" />
                <attribute name="Build-Date" value="${build.tstamp}" />
                <attribute name="Implementation-Build" value="${build.revision}" />
                <attribute name="Implementation-Version" value="${build.version}" />
            </manifest>
        </jar>
    </target>

    <target name="gameserver" depends="gameserver-jar">
        <mkdir dir="${build.dist}" />
        <mkdir dir="${build.dist.tools}" />
        <mkdir dir="${build.dist.gameserver}" />
        <mkdir dir="${build.dist.gameserver}/geodata" />
        <mkdir dir="${build.dist.gameserver}/log" />

        <copy todir="${build.dist.gameserver}">
            <fileset dir="${lib}/ext">
                <include name="*.dll" />
                <include name="*.so" />
            </fileset>
        </copy>

        <copy todir="${build.dist}/libs">
            <fileset dir="${build}">
                <include name="l2ft-gameserver.jar" />
            </fileset>
        </copy>

        <fixcrlf srcdir="${build.dist.gameserver}" eol="lf" eof="remove" includes="**/*.sh" />
        <fixcrlf srcdir="${build.dist.gameserver}" eol="crlf" eof="remove" includes="**/*.bat" />

        <delete dir="${build.classes}" />

        <copy todir="${build.dist.gameserver}" preservelastmodified="true">
            <fileset dir="${dist}/gameserver">
                <include name="**/*.*" />
                <!-- <exclude name="/data/scripts/**/*" /> -->
            </fileset>
        </copy>

        <copy todir="${build.dist.tools}" preservelastmodified="true">
            <fileset dir="${dist}/tools">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <!-- ==================== SCRIPTS ==================== -->
    <target name="compile-scripts" depends="commons-jar" description="Compile the source.">
        <copy todir="${lib}">
            <fileset dir="${build}">
                <include name="l2ft-gameserver.jar" />
                <include name="l2ft-commons.jar" />
            </fileset>
        </copy>
        <delete dir="${build.classes}" />
        <mkdir dir="${build.classes}" />

        <javac destdir="${build.classes}"
               optimize="on"
               debug="on"
               source="1.7"
               target="1.7"
               encoding="UTF-8"
               includeantruntime="false"
               nowarn="on">
            <compilerarg value="-Xlint:unchecked" />
            <src path="${src.scripts}" />
            <classpath refid="classpath" />
        </javac>
    </target>

    <target name="scripts-jar" depends="compile-scripts">
        <jar destfile="${build}/l2ft-scripts.jar" level="9">
            <fileset dir="${build.classes}" />
            <manifest>
                <attribute name="Build-By" value="${user.name}" />
                <attribute name="Build-Date" value="${build.tstamp}" />
                <attribute name="Main-Class" value="l2ft.gameserver.GameServer" />
                <attribute name="Class-Path" value=". " />
            </manifest>
        </jar>
    </target>

    <target name="scripts" depends="scripts-jar">
        <copy todir="${build.dist.gameserver}/libs">
            <fileset dir="${build}">
                <include name="l2ft-scripts.jar" />
            </fileset>
        </copy>
    </target>

    <!-- ==================== COMPILE AUTHSERVER ==================== -->
    <target name="compile-authserver" depends="commons-jar">
        <delete dir="${build.classes}" />
        <mkdir dir="${build.classes}" />

        <javac srcdir="${src.authserver}"
               optimize="on"
               destdir="${build.classes}"
               debug="${debug}"
               source="1.7"
               target="1.7"
               encoding="UTF-8"
               nowarn="on"
               classpath="${build.classpath}:${build}/l2ft-commons.jar">
            <compilerarg value="-Xlint:all,-serial" />
        </javac>
    </target>

    <target name="authserver-jar" depends="compile-authserver">
        <exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
            <arg line="-n ${src.authserver}" />
        </exec>

        <jar destfile="${build}/l2ft-loginserver.jar">
            <fileset dir="${build.classes}" />
            <manifest>
                <attribute name="Main-Class" value="l2ft.loginserver.AuthServer" />
                <attribute name="Class-Path" value="${jar.list} l2ft-commons.jar" />
                <attribute name="Build-By" value="${user.name}" />
                <attribute name="Build-Date" value="${build.tstamp}" />
                <attribute name="Implementation-Build" value="${build.revision}" />
                <attribute name="Implementation-Version" value="${build.version}" />
            </manifest>
        </jar>
    </target>

    <target name="authserver" depends="authserver-jar">
        <mkdir dir="${build.dist}" />
        <mkdir dir="${build.dist.authserver}" />
        <mkdir dir="${build.dist}/libs" />
        <mkdir dir="${build.dist.authserver}/log" />

        <copy todir="${build.dist}/libs">
            <fileset dir="${build}">
                <include name="l2ft-loginserver.jar" />
                <include name="l2ft-commons.jar" />
            </fileset>
        </copy>

        <copy todir="${build.dist}/libs">
            <fileset dir="${lib}">
                <include name="*.jar" />
                <exclude name="/ext" />
                <exclude name="/ext/*" />
                <exclude name="CatsByteGuard.jar" />
                <exclude name="l2ft-gameserver.jar" />
                <exclude name="7z.jar" />
            </fileset>
        </copy>

        <copy todir="${build.dist.authserver}">
            <fileset dir="${dist}/loginserver" />
            <fileset dir="${lib}/ext">
                <include name="*.dll" />
                <include name="*.so" />
            </fileset>
        </copy>

        <fixcrlf srcdir="${build.dist.authserver}" eol="lf" eof="remove" includes="**/*.sh" />
        <fixcrlf srcdir="${build.dist.authserver}" eol="crlf" eof="remove" includes="**/*.bat" />
    </target>

    <!-- ==================== ORIGINAL DIST TARGET ==================== -->
    <target name="dist" depends="authserver, gameserver">
        <zip destfile="${build}/l2ft-dist.zip" basedir="${build.dist}" />
    </target>

    <!-- =============== NEW DEV TARGETS =============== -->

    <!-- Dev copy for GameServer -->
    <target name="gameserver-dev" depends="gameserver-jar">
        <mkdir dir="${build.dist.dev}" />
        <mkdir dir="${build.dist.dev.tools}" />
        <mkdir dir="${build.dist.dev.gameserver}" />
        <mkdir dir="${build.dist.dev.gameserver}/geodata" />
        <mkdir dir="${build.dist.dev.gameserver}/log" />

        <copy todir="${build.dist.dev.gameserver}">
            <fileset dir="${lib}/ext">
                <include name="*.dll" />
                <include name="*.so" />
            </fileset>
        </copy>

        <copy todir="${build.dist.dev}/libs">
            <fileset dir="${build}">
                <include name="l2ft-gameserver.jar" />
            </fileset>
        </copy>

        <fixcrlf srcdir="${build.dist.dev.gameserver}" eol="lf" eof="remove" includes="**/*.sh" />
        <fixcrlf srcdir="${build.dist.dev.gameserver}" eol="crlf" eof="remove" includes="**/*.bat" />

        <delete dir="${build.classes}" />

        <copy todir="${build.dist.dev.gameserver}" preservelastmodified="true">
            <fileset dir="${dist}/gameserver">
                <include name="**/*.*" />
            </fileset>
        </copy>

        <copy todir="${build.dist.dev.tools}" preservelastmodified="true">
            <fileset dir="${dist}/tools">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <!-- Dev copy for AuthServer -->
    <target name="authserver-dev" depends="authserver-jar">
        <mkdir dir="${build.dist.dev}" />
        <mkdir dir="${build.dist.dev.authserver}" />
        <mkdir dir="${build.dist.dev}/libs" />
        <mkdir dir="${build.dist.dev.authserver}/log" />

        <copy todir="${build.dist.dev}/libs">
            <fileset dir="${build}">
                <include name="l2ft-loginserver.jar" />
                <include name="l2ft-commons.jar" />
            </fileset>
        </copy>

        <copy todir="${build.dist.dev}/libs">
            <fileset dir="${lib}">
                <include name="*.jar" />
                <exclude name="/ext" />
                <exclude name="/ext/*" />
                <exclude name="CatsByteGuard.jar" />
                <exclude name="l2ft-gameserver.jar" />
                <exclude name="7z.jar" />
            </fileset>
        </copy>

        <copy todir="${build.dist.dev.authserver}">
            <fileset dir="${dist}/loginserver" />
            <fileset dir="${lib}/ext">
                <include name="*.dll" />
                <include name="*.so" />
            </fileset>
        </copy>

        <fixcrlf srcdir="${build.dist.dev.authserver}" eol="lf" eof="remove" includes="**/*.sh" />
        <fixcrlf srcdir="${build.dist.dev.authserver}" eol="crlf" eof="remove" includes="**/*.bat" />
    </target>

    <!-- Zip dev output -->
    <target name="dist-dev" depends="authserver-dev, gameserver-dev">
        <zip destfile="${build}/l2ft-dist-dev.zip" basedir="${build.dist.dev}" />
    </target>
    <!-- ================================================ -->

</project>
